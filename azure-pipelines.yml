# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

variables:
  AzureSubscription: 'devtest'
  BackendServiceArm: 'Free Trial(c88aba11-9acc-421a-af0b-f3de2280694d)'
  BackendAzureRmResourceGroupName: 'firstrg701'
  BackendAzureRmStorageAccountName: 'firststg702'
  BackendAzureRmContainerName: 'devopscontainer'
  BackendAzureRmKey: 'alert.terraform.tfstate'
  EnvironmentServiceNameAzureRM: 'Free Trial(c88aba11-9acc-421a-af0b-f3de2280694d)'

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureCLI@2
  displayName: 'az login'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az account show'
    addSpnToEnvironment: true
    workingDirectory: '$(System.DefaultWorkingDirectory)/deployment'

- task: TerraformInstaller@1
  displayName: 'Installing Terraform'
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: 'terraform init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/deployment'
    backendServiceArm: '$(BackendServiceArm)'
    backendAzureRmResourceGroupName: '$(BackendAzureRmResourceGroupName)'
    backendAzureRmStorageAccountName: '$(BackendAzureRmStorageAccountName)'
    backendAzureRmContainerName: '$(BackendAzureRmContainerName)'
    backendAzureRmKey: '$(BackendAzureRmKey)'

- task: TerraformTaskV4@4
  displayName: 'terraform plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/deployment'
    commandOptions: '-var-file="./webapp.tfvars"'
    environmentServiceNameAzureRM: '$(EnvironmentServiceNameAzureRM)'

- task: TerraformTaskV4@4
  displayName: 'terraform apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/deployment'
    commandOptions: '-auto-approve -var-file="./webapp.tfvars"'
    environmentServiceNameAzureRM: '$(EnvironmentServiceNameAzureRM)'
